<?phpnamespace App\Controllers;use Irsyadulibad\DataTables\DataTables;class Lampiran extends BaseController{    public function json_lmk($client_id="")    {        $query = DataTables::use('lmk')                ->select('lmk_id,client.nama_client as nama_client, tgl_lmk,ket_lmk,bulan_lmk,tahun_lmk, file_lmk')                ->join('client', 'client_id', 'left');        if ($client_id) {            return $this->response->setJSON($query->where(['client_id'=>$client_id])->make(true));        } else {            return $this->response->setJSON($query->make(true));        }    }    public function index()    {        $data = [            'title'         => "Dokumen LMK",            'validation'    => $this->validation,        ];                if (!in_array(userdata('role'), ['admin','superadmin'])) {            $client_id = clientdata(userdata('user_id'))['client_id'];            $data['lmk'] = $this->lmk->join('client', 'client_id')->where(['client_id'=>$client_id])->findAll();            return view('lampiran/index', $data);        } else {            $client = new \App\Models\ClientModel();            $data['client'] = $client->select('client_id,nama_client')->findAll();            return view('lampiran/dokumen_lmk', $data);        }    }    public function json($jenis = null)    {        if (!$jenis) {            $query = DataTables::use('lampiran')                ->select("lampiran_id,client.nama_client as nama_client,pengajuan.no_invoice as no_invoice, jenis_file, tgl_lampiran,file_lampiran")                ->join('pengajuan', 'pengajuan_id', 'left')                ->join('client', 'client_id', 'left');            return $this->response->setJSON($query->make(true));        } else {            $query = DataTables::use('lampiran')                ->select("lampiran_id,client.nama_client as nama_client,pengajuan.no_invoice as no_invoice, jenis_file, tgl_lampiran,file_lampiran")                ->join('pengajuan', 'pengajuan_id', 'left')                ->join('client', 'client_id', 'left')                ->where(['jenis_file'=>$jenis]);            return $this->response->setJSON($query->make(true));        }    }    public function data()    {        $data = [            'title'         => "Dokumen Lampiran",            'validation'    => $this->validation,        ];                return view('lampiran/data', $data);    }    public function upload($id)    {        $pengajuan = $this->pengajuan->where(['pengajuan_id'=>$id])->first();        if (!$pengajuan) {            return redirect()->to('/pengajuan');        } else {            $currentClientId = clientdata(userdata('user_id'))['client_id'];            if ($pengajuan['client_id'] != $currentClientId) {                return redirect()->to('/pengajuan');            }        }        $data = [            'pengajuan'     => $pengajuan,            'validation'    => $this->validation,            'jenis'         => $this->lampiran->getJenisFile($id),            'lampiran'      => $this->lampiran->getIdByPengajuan($id),            'file_kosong'   => $this->lampiran->getFileKosong($id),            'title'         => 'Lampiran - '.$pengajuan['no_invoice'],        ];        return view('lampiran/upload', $data);    }    public function save()    {        if ($this->request->getMethod() !== 'post') {            return redirect()->to('/pengajuan');        }        $this->validation->setRules([            'jenis_file' => ['label' => 'Jenis Dokumen', 'rules' => 'required'],        ]);        if (!$this->validation->withRequest($this->request)->run()) {            return redirect()                ->to($_SERVER['HTTP_REFERER'])                ->withInput()                ->with('validation', $this->validation);        }                $file = $this->request->getFile('file_lampiran');        if ($file->isValid() && ! $file->hasMoved()) {            $path = FCPATH.'uploads/lampiran';                        $input = $this->request->getVar(null, FILTER_SANITIZE_STRING);                        $input['file_lampiran'] = $file->getRandomName();            $input['size_file'] = $file->getSize();            $tipeFile = $file->getClientMimeType();            if (in_array($tipeFile, $this->mimeType)) {                $cekJenis = $this->lampiran->where(['jenis_file'=>$input['jenis_file'], 'pengajuan_id'=>$input['pengajuan_id']])->first();                if ($cekJenis) {                    if (is_file($path.'/'.$cekJenis['file_lampiran'])) {                        unlink($path.'/'.$cekJenis['file_lampiran']);                    }                    $this->lampiran->delete($cekJenis['lampiran_id']);                }                $file->move($path, $input['file_lampiran']);                $this->lampiran->save($input);                               setToast('success', "File berhasil diupload");            } else {                setToast('error', "Tipe file lampiran tidak didukung");            }        } else {            setToast('error', "Anda belum memilih berkas file");        }        return redirect()->to($_SERVER['HTTP_REFERER']);    }    public function delete($lampiran_id)    {        $path = FCPATH.'uploads/lampiran/';        $lampiran = $this->lampiran->get($lampiran_id);        if (is_file($path.$lampiran['file_lampiran'])) {            unlink($path.$lampiran['file_lampiran']);        }        $this->lampiran->delete($lampiran['lampiran_id']);        setToast('success', "Lampiran berhasil dihapus");        return redirect()->to($_SERVER['HTTP_REFERER']);    }    public function download($lampiran_id)    {        $lamp = $this->lampiran->get($lampiran_id);        $pengajuan = $this->pengajuan->get($lamp['pengajuan_id']);                // $inv = $pengajuan['no_invoice'];        // $no_inv = explode('/', $inv)[0];                $file = $lamp['file_lampiran'];        $exp = explode('.', $file);        $ext = '.'.end($exp);        $filename = 'vlegal-'.$lamp['jenis_file'].'_'.$pengajuan['nama_client'].'_'.$pengajuan['no_invoice'].'_'.$lamp['tgl_lampiran'].$ext;                $img = FCPATH.'uploads/lampiran/'.$file;        return $this->response->download($img, null)->setFileName($filename);    }    // Upload PEB    public function peb($id=null)    {        $pengajuan = $this->pengajuan->where(['pengajuan_id'=>$id])->first();        $data = [            'pengajuan'     => $pengajuan,            'validation'    => $this->validation,            'lampiran'      => $this->lampiran->getIdByPengajuan($id),            'title'         => 'PEB - '.$pengajuan['no_invoice'],        ];        return view('lampiran/peb', $data);    }    public function download_peb($id=null)    {        $peb = $this->lampiran->where(['pengajuan_id'=>$id, 'jenis_file'=>'peb'])->first();        if (!$peb) {            setToast('error', "File PEB tidak ditemukan");            return redirect()->to('/review');        } else {            $filePEB = FCPATH.'uploads/lampiran/'.$peb['file_lampiran'];            return $this->response->download($filePEB, null);        }    }    // Upload LMK    public function upload_lmk()    {        if ($this->request->getMethod() !== 'post') {            return redirect()->to('/lampiran');        }        $this->validation->setRules([            'bulan_lmk' => ['label' => 'Bulan LMK', 'rules' => 'required'],            'tahun_lmk' => ['label' => 'Tahun LMK', 'rules' => 'required'],        ]);        if (!$this->validation->withRequest($this->request)->run()) {            return redirect()                ->to($_SERVER['HTTP_REFERER'])                ->withInput()                ->with('validation', $this->validation);        }                $file = $this->request->getFile('file_lmk');        if ($file->isValid() && ! $file->hasMoved()) {            $path = FCPATH.'uploads/lmk/';                        $input = $this->request->getVar(null, FILTER_SANITIZE_STRING);            $input['tgl_lmk'] = date('Y-m-d');                        $input['file_lmk'] = $file->getRandomName();            $tipeFile = $file->getClientMimeType();                        if (in_array($tipeFile, $this->mimeType)) {                $file->move($path, $input['file_lmk']);                $this->lmk->save($input);                               setToast('success', "File berhasil diupload");            } else {                setToast('error', "Tipe file lampiran tidak didukung");            }        } else {            setToast('error', "Anda belum memilih berkas file");        }        return redirect()->to($_SERVER['HTTP_REFERER']);    }    public function delete_lmk($lmk_id)    {        $path = FCPATH.'uploads/lmk/';        $lmk = $this->lmk->get($lmk_id);        if (is_file($path.$lmk['file_lmk'])) {            unlink($path.$lmk['file_lmk']);        }        $this->lmk->delete($lmk['lmk_id']);        setToast('success', 'LMK Berhasil dihapus');        return redirect()->to($_SERVER['HTTP_REFERER']);    }    public function multi_delete()    {        $checked    = $this->request->getVar('checked', FILTER_SANITIZE_STRING);        $total      = count($checked);        $path       = FCPATH.'uploads/lampiran/';                foreach ($checked as $id) {            $lampiran = $this->lampiran->get($id);                        if (is_file($path.$lampiran['file_lampiran'])) {                unlink($path.$lampiran['file_lampiran']);            }                                    $this->lampiran->delete($id);        }        setToast('success', "{$total} Lampiran berhasil dihapus");        return redirect()->to('/lampiran/data');    }    public function multidelete_lmk()    {        $checked    = $this->request->getVar('checked', FILTER_SANITIZE_STRING);        $total      = count($checked);        $path       = FCPATH.'uploads/lmk/';                foreach ($checked as $id) {            $lmk = $this->lmk->get($id);                        if (is_file($path.$lmk['file_lmk'])) {                unlink($path.$lmk['file_lmk']);            }                                    $this->lmk->delete($id);        }        setToast('success', "{$total} LMK berhasil dihapus");        return redirect()->to('/lampiran');    }}