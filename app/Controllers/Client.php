<?phpnamespace App\Controllers;use Irsyadulibad\DataTables\DataTables;class Client extends BaseController{    public function json()    {        $query = DataTables::use('client')                ->select('client_id,nama_client,users.username as uname,no_sertifikat,client.email as email,client.status')                ->join('users', 'user_id', 'left')                ->make(true);        return $this->response->setJSON($query);    }    public function index()    {        $data = [            'title'     => 'Data Client',            'client'      => $this->client->get()        ];        // Jika client mengakses daftar client        if (!is_superadmin()) {            return redirect()->to('/client/add');        }        return view('client/data', $data);    }    public function add()    {        if (userdata('role') == "client") {            $userId = userdata('user_id');            $client = $this->client->getByUserId($userId);            if ($client) {                $id = $client['client_id'];                return redirect()->to('/client/edit/'.$id);            }        }        $data = [            'title'         => 'Tambah Client',            'provinsi'      => $this->provinsi->get(),            'user'          => $this->user->getUserClient(),            'validation'    => $this->validation        ];        return view('client/add', $data);    }    public function getKabupaten($provinsi_id)    {        $provinsi = $this->provinsi->get($provinsi_id)['kode_provinsi'];        $kode_provinsi = substr($provinsi, 0, 2);        $kabupaten = $this->kabupaten->getDataByProvinsi($kode_provinsi);        header('Content-Type: application/json');        echo json_encode($kabupaten);    }    private function _rules()    {        $this->validation->setRules([            'user_id' => ['label'=>'User', 'rules'=>'required'],            'nama_client' => ['label'=>'Nama Client', 'rules'=>'required'],            'alamat_client' => ['label'=>'Alamat Client', 'rules'=>'required'],            'provinsi_id' => ['label'=>'Provinsi', 'rules'=>'required'],            'kabupaten_id' => ['label'=>'Kabupaten', 'rules'=>'required'],            'telepon' => ['label'=>'Telepon', 'rules'=>'required'],            'email' => ['label'=>'Email', 'rules'=>'required|valid_email'],            'npwp' => ['label'=>'NPWP', 'rules'=>'required|numeric|max_length[15]'],            'no_sertifikat' => ['label'=>'Nomor Sertifikat', 'rules'=>'required'],            'tgl_sertifikat' => ['label'=>'Tanggal Sertifikat', 'rules'=>'required'],            'tgl_kadaluwarsa_sertifikat' => ['label'=>'Tanggal Kadaluwarsa Sertifikat', 'rules'=>'required'],        ]);    }    public function save()    {        $this->_rules();        $input = $this->request->getVar(null, FILTER_SANITIZE_STRING);        unset($input['csrf_test_name']);                if (!$this->validation->withRequest($this->request)->run()) {            setToast('error', "Data gagal disimpan");            return redirect()->to('/client/add/')->withInput()->with('validation', $this->validation);        }        $this->client->save($input);        setToast('success', "Data berhasil disimpan");        return redirect()->to('/client');    }    public function delete($id)    {        $this->client->delete($id);        setToast('success', "Data berhasil dihapus");        return redirect()->to('/client');    }    public function multi_delete()    {        $checked = $this->request->getVar('checked', FILTER_SANITIZE_STRING);                foreach ($checked as $id) {            $this->client->delete($id);        }        setToast('success', "Data berhasil dihapus");        return redirect()->to('/client');    }    public function edit($id)    {        $data = [            'title'         => 'Edit Client',            'provinsi'      => $this->provinsi->get(),            'client'        => $this->client->get($id),            'validation'    => $this->validation        ];        // Cek Akses Client        if (userdata('role') == "client") {            if ($data['client']['user_id'] != userdata('user_id')) {                return redirect()->to('/client/add');            }        }        return view('client/edit', $data);    }    public function update()    {        $this->_rules();                $input = $this->request->getVar(null, FILTER_SANITIZE_STRING);        unset($input['csrf_test_name']);                if (!$this->validation->withRequest($this->request)->run()) {            setToast('error', "Data gagal disimpan");            return redirect()                ->to('/client/edit/'.$input['client_id'])                ->withInput()                ->with('validation', $this->validation);        }        if (is_admin()) {            $this->user->set('status', $input['status']);            $this->user->where('user_id', $input['user_id']);            $this->user->update();        }        $this->client->save($input);        setToast('success', "Data berhasil disimpan");        return redirect()->to('/client');    }}