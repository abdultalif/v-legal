<?phpnamespace App\Controllers;use CodeIgniter\I18n\Time;use Irsyadulibad\DataTables\DataTables;class Detailpengajuan extends BaseController{    public function index()    {        return redirect()->to('pengajuan');    }    public function detail($id)    {        $pengajuan = $this->pengajuan->get($id);                if (!$pengajuan) {            return redirect()->to('/pengajuan');        } else {            $currentClientId = clientdata(userdata('user_id'))['client_id'];            if ($pengajuan['client_id'] != $currentClientId) {                return redirect()->to('/pengajuan');            }        }        $data = [            'title'         => 'Detail Pengajuan',            'validation'    => $this->validation,            'detail'        => $pengajuan,            'produk'        => $this->produk->get(),            'kayu'          => $this->kayu->get(),            'getNegara'     => $this->negara->get(),            'list_detail'   => $this->detail->get($id),            'total'         => $this->detail->getTotal($id),            'jenis_kayu'    => $this->kayu,            'negara'        => $this->negara        ];                return view('pengajuan/detail/add', $data);    }    public function get($id)    {        $query = $this->detail->where(['id'=>$id])->first();        return $this->response->setJSON($query);    }    public function _rules()    {        $this->validation->setRules([            'produk_id' => ['label' => 'Produk', 'rules' => 'required'],            'jenis_id' => ['label' => 'Jenis Kayu', 'rules' => 'required'],            'negara_id' => ['label' => 'Negara Panen', 'rules' => 'required'],            'jumlah' => ['label' => 'Jumlah', 'rules' => 'required|numeric'],            'volume' => ['label' => 'Volume', 'rules' => 'required|numeric'],            'berat' => ['label' => 'Berat', 'rules' => 'required|numeric'],            'nilai' => ['label' => 'Nilai', 'rules' => 'required|numeric'],        ]);    }    public function save()    {        $this->_rules();                $input = $this->request->getVar(null, FILTER_SANITIZE_STRING);        unset($input['csrf_test_name']);                $url = '/detailpengajuan/detail/'.$input['pengajuan_id'];        if (!$this->validation->withRequest($this->request)->run()) {            return redirect()                ->to($url)                ->withInput()                ->with('validation', $this->validation);        }                $input['jenis_id'] = implode(';', $input['jenis_id']);        $input['negara_id'] = implode(';', $input['negara_id']);        // Update Tanggal Pengajuan        $updatedAt = ['updated_at' => Time::now('Asia/Jakarta', 'en_US'), 'pengajuan_id' => $input['pengajuan_id']];        $this->pengajuan->save($updatedAt);        $this->detail->save($input);        setToast('success', 'Data berhasil disimpan');                return redirect()->to($url);    }    public function delete($id, $detail)    {        $this->detail->delete($id);        setToast('success', "Data berhasil dihapus");        return redirect()->to('/detailpengajuan/detail/'.$detail);    }}